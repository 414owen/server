-- source include/have_cp932.inc
--echo #
--echo # Bug #11755818 LIKE DOESN'T MATCH WHEN CP932_BIN/SJIS_BIN COLLATIONS ARE 
--echo #               USED.
--echo #

#remove this include in 10.6 version
--source include/no_view_protocol.inc

SET @old_character_set_client= @@character_set_client;
SET @old_character_set_connection= @@character_set_connection;
SET @old_character_set_results= @@character_set_results;
SET character_set_client= 'utf8';
SET character_set_connection= 'utf8';
SET character_set_results= 'utf8';

CREATE TABLE t1 (a VARCHAR(10) COLLATE cp932_bin);
INSERT INTO t1 VALUES('ｶｶ');
SELECT * FROM t1 WHERE a LIKE '%ｶ';
SELECT * FROM t1 WHERE a LIKE '_ｶ';
SELECT * FROM t1 WHERE a LIKE '%_ｶ';

ALTER TABLE t1 MODIFY a VARCHAR(100) COLLATE sjis_bin;
SELECT * FROM t1 WHERE a LIKE '%ｶ';
SELECT * FROM t1 WHERE a LIKE '_ｶ';
SELECT * FROM t1 WHERE a LIKE '%_ｶ';
DROP TABLE t1;

## Reset to initial values
SET @@character_set_client= @old_character_set_client;
SET @@character_set_connection= @old_character_set_connection;
SET @@character_set_results= @old_character_set_results;

--echo #
--echo # Start of 10.2 tests
--echo #

--echo #
--echo # MDEV-9711 NO PAD Collatons
--echo #
SET character_set_connection=cp932;
let $coll='cp932_japanese_nopad_ci';
let $coll_pad='cp932_japanese_ci';
--source include/ctype_pad_all_engines.inc

let $coll='cp932_nopad_bin';
let $coll_pad='cp932_bin';
--source include/ctype_pad_all_engines.inc

--echo #
--echo # End of 10.2 tests
--echo #


--echo #
--echo # Start of 10.4 tests
--echo #

--echo #
--echo # MDEV-27771 [ERROR] mysqld: Incorrect information in file: './test/t1.frm' on "ERROR 1918 Encountered illegal value ... when converting to latin1"
--echo #

SET NAMES cp932;

# The string used below is _cp932 0xEFBFBD, it consists of two characters:
# - 0xEFBF - an unassigned CJK
# - 0xBF   - HALFWIDTH KATAKANA LETTER SU (U+FF7D, _utf8 0xEFBDBD)

# 0xEFBD does not convert safely to utf8, it gets replaced to 0x3F '?'
# 0xBF converts safely to utf8
# So the CONVERT is expected to return 0x3EEFBDBD:
SELECT HEX('�') AS cp932, HEX(CONVERT('�' USING utf8)) AS utf8;

# As the first character is not assigned, it does not convert
# to any other character sets, including utf8

--error ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED
CREATE TABLE t1 (gc CHAR(2) GENERATED ALWAYS AS ('�')) /*latin1 by default*/;
--error ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED
CREATE TABLE t1 (gc CHAR(2) GENERATED ALWAYS AS ('�')) CHARACTER SET latin1;
--error ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED
CREATE TABLE t1 (gc CHAR(2) GENERATED ALWAYS AS ('�')) CHARACTER SET utf8;


# The string used below is _cp932 0xE190BF, it consists of two characters:
# - 0xE190 - an assigned CJK              (U+7630, _utf8 0xE798B0)
# - 0xBF   - HALFWIDTH KATAKANA LETTER SU (U+FF7D, _utf8 0xEFBDBD)

SELECT HEX('ᐿ'), HEX(CONVERT('ᐿ' USING utf8));

# This string does not convert to latin1
--error ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED
CREATE TABLE t1 (gc CHAR(2) GENERATED ALWAYS AS ('ᐿ')) /*latin1 by default*/;
--error ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED
CREATE TABLE t1 (gc CHAR(2) GENERATED ALWAYS AS ('ᐿ')) CHARACTER SET latin1;

# But it converts to utf8
CREATE TABLE t1 (gc CHAR(2) GENERATED ALWAYS AS ('ᐿ')) CHARACTER SET utf8;
SHOW CREATE TABLE t1;
INSERT INTO t1 VALUES (DEFAULT);
SELECT HEX(gc) FROM t1;
DROP TABLE t1;

--echo #
--echo # End of 10.4 tests
--echo #
