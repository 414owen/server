include/master-slave.inc
[connection master]
connection slave;
SET @old_parallel_threads=@@GLOBAL.slave_parallel_threads;
call mtr.add_suppression("Slave: This operation cannot be performed as you have a running slave with parallel threads.*");
#
# Trying to alter gtid_slave_pos table while slave has parallel threads
# should result in an error
#
connection slave;
include/stop_slave.inc
SET GLOBAL slave_parallel_threads=1;
CHANGE MASTER TO master_use_gtid=slave_pos;
include/start_slave.inc
# Slave_SQL_Running: Yes
ALTER TABLE mysql.gtid_slave_pos ENGINE=innodb;
ERROR HY000: This operation cannot be performed as you have a running slave with parallel threads. Either stop the slave or disable parallelism first.
#
# Altering gtid_slave_pos engine while slave SQL thread is stopped should
# succeed
#
include/stop_slave.inc
# Slave_SQL_Running: No
ALTER TABLE mysql.gtid_slave_pos ENGINE=innodb;
include/start_slave.inc
# Reset gtid_slave_pos engine
include/stop_slave.inc
ALTER TABLE mysql.gtid_slave_pos ENGINE=MyISAM;
include/start_slave.inc
#
# Altering gtid_slave_pos engine on serial slave should succeed
#
include/stop_slave.inc
SET GLOBAL slave_parallel_threads=0;
include/start_slave.inc
# Slave_SQL_Running: Yes
ALTER TABLE mysql.gtid_slave_pos ENGINE=innodb;
include/start_slave.inc
Warnings:
Note	1254	Slave is already running
# Reset gtid_slave_pos engine
include/stop_slave.inc
ALTER TABLE mysql.gtid_slave_pos ENGINE=MyISAM;
include/start_slave.inc
#
# Replicating gtid_slave_pos engine change from master to serial slave
# should succeed
#
connection slave;
include/stop_slave.inc
SET GLOBAL slave_parallel_threads=0;
include/start_slave.inc
connection master;
ALTER TABLE mysql.gtid_slave_pos ENGINE=InnoDB;
include/save_master_gtid.inc
connection slave;
include/sync_with_master_gtid.inc
# Reset gtid_slave_pos engine
connection master;
ALTER TABLE mysql.gtid_slave_pos ENGINE=MyISAM;
include/save_master_gtid.inc
connection slave;
include/sync_with_master_gtid.inc
#
# Replicating gtid_slave_pos engine change from master to parallel slave
# should fail
#
connection slave;
include/stop_slave.inc
ALTER TABLE mysql.gtid_slave_pos ENGINE=MyISAM;
SET GLOBAL slave_parallel_threads=1;
include/start_slave.inc
connection master;
ALTER TABLE mysql.gtid_slave_pos ENGINE=InnoDB;
include/save_master_gtid.inc
connection slave;
include/wait_for_slave_sql_error.inc [errno=4054]
# Skip the problem event from the master.
include/stop_slave.inc
SET sql_slave_skip_counter=1;
include/start_slave.inc
include/sync_with_master_gtid.inc
#
# Renaming gtid_slave_pos table while slave has parallel threads should
# result in an error
#
connection slave;
include/stop_slave.inc
SET GLOBAL slave_parallel_threads=1;
include/start_slave.inc
# Slave_SQL_Running: Yes
RENAME TABLE mysql.gtid_slave_pos TO mysql.gtid_slave_pos_v2;
ERROR HY000: This operation cannot be performed as you have a running slave with parallel threads. Either stop the slave or disable parallelism first.
#
# Renaming gtid_slave_pos table on serial slave should succeed
#
connection slave;
include/stop_slave.inc
SET GLOBAL slave_parallel_threads=0;
include/start_slave.inc
# Slave_SQL_Running: Yes
RENAME TABLE mysql.gtid_slave_pos TO mysql.gtid_slave_pos_v2;
# Revert table name
RENAME TABLE mysql.gtid_slave_pos_v2 TO mysql.gtid_slave_pos;
#
# Renaming gtid_slave_pos table should succeed on stopped slave
#
connection slave;
# Slave_SQL_Running: Yes
include/stop_slave.inc
RENAME TABLE mysql.gtid_slave_pos TO mysql.gtid_slave_pos_v2;
include/start_slave.inc
# Revert table name
include/stop_slave.inc
RENAME TABLE mysql.gtid_slave_pos_v2 TO mysql.gtid_slave_pos;
include/start_slave.inc
#
# Cleanup
#
connection slave;
include/stop_slave.inc
ALTER TABLE mysql.gtid_slave_pos ENGINE=MyISAM;
SET GLOBAL slave_parallel_threads=@old_parallel_threads;
include/start_slave.inc
include/rpl_end.inc
