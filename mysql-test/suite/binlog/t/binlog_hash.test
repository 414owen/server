--source include/binlog_combinations.inc
--source include/have_innodb.inc
--source include/not_windows.inc
--source include/not_embedded.inc

let $datadir= `select @@datadir`;
set @old_binlog_gtid_pos_cache= @@global.binlog_gtid_pos_cache;
set @old_binlog_gtid_pos_cache_sparse= @@global.binlog_gtid_pos_cache_sparse;
set @@global.binlog_gtid_pos_cache= 0;
reset master;
set @@global.binlog_gtid_pos_cache= 2;
reset master;
if ($MTR_COMBINATION_CACHE_OFF)
{
  --disable_query_log
  set @@global.binlog_gtid_pos_cache= 0;
  reset master;
  --enable_query_log
}

if ($MTR_COMBINATION_CACHE_SPARSE)
{
  --disable_query_log
  set @@global.binlog_gtid_pos_cache_sparse= 2;
  reset master;
  --enable_query_log
}

select @@gtid_binlog_pos;
create table t1 (a int primary key, b int) engine=innodb;
select @@gtid_binlog_pos;
insert t1 values (1,1),(3,3),(5,5),(7,7);
select @@gtid_binlog_pos;
# select CURRENT_NUMBER_OF_BYTES_USED as A1 from performance_schema.memory_summary_global_by_event_name where event_name like "%gtid_cache%";

set @@session.gtid_domain_id= 222;
create table t2 (m int);
select @@gtid_binlog_pos;
insert t2 values (1);
select @@gtid_binlog_pos;
update t1 set b=50 where b=5;
set @@session.gtid_domain_id= 333;
select @@gtid_binlog_pos;
update t1 set b=10 where a=5;

# select CURRENT_NUMBER_OF_BYTES_USED as A2 from performance_schema.memory_summary_global_by_event_name where event_name like "%gtid_cache%";

flush binary logs;
select @@gtid_binlog_pos;
update t1 set b=20 where a= 5;

# Note: you can check GTID positions from binlog files:
# --exec $MYSQL_BINLOG --verbose $datadir/master-bin.000001

--let binlog_file= $datadir/master-bin.000001
--source binlog_hash_perl.inc
--source $datadir/binlog.inc
--remove_file $datadir/binlog.inc

--move_file $datadir/master-bin.000001 $datadir/mister-bin.000001
set @@global.binlog_gtid_pos_cache= 0;
--error 29
select binlog_gtid_pos('master-bin.000001', 3);
set @@global.binlog_gtid_pos_cache= 1;
if ($MTR_COMBINATION_CACHE_OFF)
{
  --disable_query_log
  set @@global.binlog_gtid_pos_cache= 0;
  --enable_query_log
  --move_file $datadir/mister-bin.000001 $datadir/master-bin.000001
}
if ($MTR_COMBINATION_CACHE_SPARSE)
{
  # FIXME: test encryption
  --move_file $datadir/mister-bin.000001 $datadir/master-bin.000001
}
# Note: no error when there is no file means cache hit
select binlog_gtid_pos('master-bin.000001', 3);
select binlog_gtid_pos('master-bin.000001', 255);

let $i= 1;
while ($i < $pos_n)
{
  let $pos=`select ELT($i, $pos_l)`;
  --disable_query_log
  eval select binlog_gtid_pos('master-bin.000001', $pos) as pos_$i;
  --enable_query_log
  inc $i;
}

select binlog_gtid_pos('master-bin.000002', 4);
select binlog_gtid_pos('master-bin.000002', 256);
select binlog_gtid_pos('master-bin.000002', 375);
# select binlog_gtid_pos('master-bin.000002', 417);
if ($MTR_COMBINATION_CACHE_ON)
{
  --move_file $datadir/mister-bin.000001 $datadir/master-bin.000001
}

--echo # Check binlog_hash rotation
if ($MTR_COMBINATION_CACHE_ON)
{
  --move_file $datadir/master-bin.000002 $datadir/mister-bin.000002
}
select binlog_gtid_pos('master-bin.000002', 4);
if ($MTR_COMBINATION_CACHE_OFF)
{
  --move_file $datadir/master-bin.000002 $datadir/mister-bin.000002
}
if ($MTR_COMBINATION_CACHE_SPARSE)
{
  --move_file $datadir/master-bin.000002 $datadir/mister-bin.000002
}
set @@global.binlog_gtid_pos_cache= 0;
--error 29
select binlog_gtid_pos('master-bin.000002', 4);
if ($MTR_COMBINATION_CACHE_OFF)
{
  --move_file $datadir/mister-bin.000002 $datadir/master-bin.000002
}
if ($MTR_COMBINATION_CACHE_SPARSE)
{
  --move_file $datadir/mister-bin.000002 $datadir/master-bin.000002
}
set @@global.binlog_gtid_pos_cache= 1;
select binlog_gtid_pos('master-bin.000002', 4);
flush binary logs;
if ($MTR_COMBINATION_CACHE_OFF)
{
  --move_file $datadir/master-bin.000002 $datadir/mister-bin.000002
}
if ($MTR_COMBINATION_CACHE_SPARSE)
{
  --move_file $datadir/master-bin.000002 $datadir/mister-bin.000002
}
--error 29
select binlog_gtid_pos('master-bin.000002', 4);
--move_file $datadir/mister-bin.000002 $datadir/master-bin.000002
select binlog_gtid_pos('master-bin.000002', 4);
select binlog_gtid_pos('master-bin.000002', 256);
select binlog_gtid_pos('master-bin.000002', 375);
# select binlog_gtid_pos('master-bin.000002', 417);

set @@global.binlog_gtid_pos_cache= 12;
flush binary logs; flush binary logs; flush binary logs; flush binary logs;
flush binary logs; flush binary logs; flush binary logs; flush binary logs;
flush binary logs; flush binary logs; flush binary logs; flush binary logs;
flush binary logs; flush binary logs; flush binary logs; flush binary logs;

--list_files $datadir *ster-bin.*
--move_file $datadir/master-bin.000007 $datadir/mister-bin.000007
if ($MTR_COMBINATION_CACHE_ON)
{
  --move_file $datadir/master-bin.000008 $datadir/mister-bin.000008
}
# 07 is not in cache while 08 is still in cache
--error 29
select binlog_gtid_pos('master-bin.000007', 4);
select binlog_gtid_pos('master-bin.000008', 4);
--move_file $datadir/mister-bin.000007 $datadir/master-bin.000007
if ($MTR_COMBINATION_CACHE_ON)
{
  --move_file $datadir/mister-bin.000008 $datadir/master-bin.000008
}

set @@global.binlog_gtid_pos_cache= 3;
flush binary logs;

--echo # Check row format, server_id
--source include/have_binlog_format_row.inc
insert t2 values (2);
set @@session.gtid_domain_id= 12;
set @@session.server_id= 2;
update t2 set m= 2;
set @@session.gtid_domain_id= 22;
insert t2 values (4);
set @@session.gtid_domain_id= 33;
set @@session.server_id= 3;
update t2 set m= 3;
set @@session.gtid_domain_id= 44;
delete from t2;
flush binary logs;

--let binlog_file= $datadir/master-bin.000020
--source binlog_hash_perl.inc
--source $datadir/binlog.inc
--remove_file $datadir/binlog.inc

# --list_files $datadir
# --exec $MYSQL_BINLOG --verbose $datadir/master-bin.000020

if ($MTR_COMBINATION_CACHE_OFF)
{
  --disable_query_log
  set @@global.binlog_gtid_pos_cache= 0;
  --enable_query_log
}
if ($MTR_COMBINATION_CACHE_ON)
{
  --move_file $datadir/master-bin.000020 $datadir/mister-bin.000020
}

let $i= 1;
while ($i < $pos_n)
{
  let $pos=`select ELT($i, $pos_l)`;
  --disable_query_log
  eval select binlog_gtid_pos('master-bin.000020', $pos) as pos_$i;
  --enable_query_log
  inc $i;
}

if ($MTR_COMBINATION_CACHE_ON)
{
  --move_file $datadir/mister-bin.000020 $datadir/master-bin.000020
}

# select CURRENT_NUMBER_OF_BYTES_USED as A3 from performance_schema.memory_summary_global_by_event_name where event_name like "%gtid_cache%";

drop table t1,t2;
set @@global.binlog_gtid_pos_cache= @old_binlog_gtid_pos_cache;
set @@global.binlog_gtid_pos_cache_sparse= @old_binlog_gtid_pos_cache_sparse;
